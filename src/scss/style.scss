@import 'theme.scss';
@import 'bulma.scss';

html {
  background-color: $backgroundColor;
  font-size: 16px;
}

//#b3ddf2
html, body {
  padding: 0;
}

html,
.navbar.is-fixed-top {
  max-width: $maxWidth;
  margin: auto;
}

body {
  margin: 0;
  background-color: $backgroundColor;
  display: flex;
  min-height: calc(100vh - #{$navbar-height});
  flex-direction: column;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@media screen and (max-width: $desktop) {
  html.has-navbar-fixed-top {
    padding-top: #{$navbar-height + $navbarMenuHeight};
  }
  body {
    min-height: calc(100vh - #{$navbar-height + $navbarMenuHeight})
  }
}

body > .section {
  flex: 1 1 auto;
}

section.hero.is-fullheight {
  padding: 0;

  & > .columns {
    flex: 1 1 auto;
    margin: 0;
  }
}

.footer {
  padding: 1.5rem;
}

img {
  image-orientation: from-image;
}

/* Hide IE, Edge pseudo-elements */
::-ms-clear {
  display: none;
}

::-ms-check {
  color: $blue;
  background-color: transparent;
  border-color: transparent;
}

::-ms-expand {
  background-color: transparent;
  border: 0;
}

.field.is-horizontal {
  justify-content: center;

  .field-label {
    flex-basis: inherit;
    flex-grow: inherit;
  }

  & > .field-body {
    flex-grow: 0;
  }
}


.control.address,
#address {
  max-width: 600px;
  margin: auto;
}

.notification.is-info {
  color: $grayDark;
}

hr {
  background-color: $red;
}

.select:not(.is-multiple):not(.is-loading)::after {
  border-color: $red;
}

html {
  .autocomplete {
    border-radius: 2px;
    position: absolute !important;
  }

  .autocomplete > div {
    font-size: 16px;
    padding: grid(0.5) grid(1);
  }

  .autocomplete > div:hover:not(.group),
  .autocomplete > div.selected {
    background: $lightBlue;
    color: $grayDark;
  }
}

@media print {
  html {
    overflow-y: visible;
  }
  html, body {
    display: block;
  }
  .hero.is-fullheight {
    min-height: 0;
  }
  body > .section {
    display: block;

    & > .columns {
      display: block !important;

      & > .column.is-flex {
        display: block !important;
      }
    }
  }
  section.hero.is-fullheight > .columns {
    flex-direction: column;

    & > .column.sidebar {
      width: 100%;
    }
  }
  .footer {
    display: none;
  }
  main.content {
    padding: grid(2);

    article {
      width: 100%;
      max-width: 100%;
      padding: grid(1);
    }
  }
}